(()=>{"use strict";var t,e={};t=e,Object.defineProperty(t,"__esModule",{value:!0}),t.default=class{constructor(t,e,n){this.anno=t,this.storage=e,this.anno.disableEditor=!0,this.injectIntoElement(n)}injectIntoElement(t){document.addEventListener("annotations-loaded",(()=>{t.querySelectorAll(".annotation-display-container").forEach((t=>t.remove())),this.anno.getAnnotations().forEach((e=>{t.append(this.createDisplayBlock(e))}))})),this.anno.on("createSelection",(async e=>{const n=this.createEditorBlock(e);n&&t.append(n)})),this.anno.on("selectAnnotation",(t=>{this.makeAllReadOnly();const e=document.querySelector('[data-annotation-id="'+t.id+'"]');e&&e instanceof HTMLElement&&this.makeEditable(e,t)}))}createDisplayBlock(t){const e=document.createElement("div");e.setAttribute("class","annotation-display-container");const n=document.createElement("div");return Array.isArray(t.body)&&t.body.length>0&&(n.innerHTML=t.body[0].value),e.append(n),void 0!==typeof t.id&&(e.dataset.annotationId=t.id,n.addEventListener("click",(()=>{this.anno.selectAnnotation(t.id),this.makeAllReadOnly(),this.makeEditable(e,t)}))),e}makeEditable(t,e){if("annotation-edit-container"==t.getAttribute("class"))return;t.setAttribute("class","annotation-edit-container");const n=t.querySelector("div");n&&(n.setAttribute("class","annotation-editor"),n.setAttribute("contenteditable","true"),n.focus());const a=document.createElement("button");a.setAttribute("class","save"),a.textContent="Save";const o=document.createElement("button");if(o.setAttribute("class","cancel"),o.textContent="Cancel",t.append(a),t.append(o),a.onclick=async()=>{e.motivation="supplementing",Array.isArray(e.body)&&0==e.body.length?e.body.push({type:"TextualBody",purpose:"transcribing",value:n?.textContent||"",format:"text/html"}):Array.isArray(e.body)&&(e.body[0].value=n?.textContent||""),await this.anno.updateSelected(e),this.anno.saveSelected(),this.makeReadOnly(t)},o.addEventListener("click",(()=>{this.anno.cancelSelected(),t.dataset.annotationId?this.makeReadOnly(t,e):t.remove()})),t.dataset.annotationId){const e=document.createElement("button");e.setAttribute("class","delete"),e.textContent="Delete",t.append(e),e.addEventListener("click",(()=>{this.anno.removeAnnotation(t.dataset.annotationId),t.remove(),this.storage.adapter.delete(t.dataset.annotationId)}))}return t}makeReadOnly(t,e){t.setAttribute("class","annotation-display-container");const n=t.querySelector("div");return n&&(n.setAttribute("class",""),n.setAttribute("contenteditable","false"),e&&void 0!==typeof e.body&&Array.isArray(e.body)&&(n.innerHTML=e.body[0].value,this.anno.addAnnotation(e))),t.querySelectorAll("button").forEach((t=>t.remove())),t}makeAllReadOnly(){document.querySelectorAll(".annotation-edit-container").forEach((t=>{t instanceof HTMLElement&&this.makeReadOnly(t)}))}createEditorBlock(t){return this.makeEditable(this.createDisplayBlock(t),t)}},module.exports=e})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,